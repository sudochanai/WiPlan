
-- Generated by the database client.
CREATE TABLE users(
    user_id SERIAL NOT NULL,
    username varchar(50) NOT NULL,
    password varchar(255) NOT NULL,
    email varchar(100) NOT NULL,
    age integer NOT NULL,
    privileges varchar(50) NOT NULL,
    PRIMARY KEY(user_id)
);


-- Generated by the database client.
CREATE TABLE events(
    event_id SERIAL NOT NULL,
    name varchar(100) NOT NULL,
    description text NOT NULL,
    venue varchar(100) NOT NULL,
    time timestamp without time zone NOT NULL,
    duration interval NOT NULL,
    mode varchar(10) NOT NULL,
    status varchar(10) NOT NULL,
    organizer_id integer,
    image_url text,
    PRIMARY KEY(event_id),
    CONSTRAINT events_organizer_id_fkey FOREIGN key(organizer_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);

-- Generated by the database client.
CREATE TABLE agendas(
    agenda_id SERIAL NOT NULL,
    event_id SERIAL NOT NULL,
    title varchar(100) NOT NULL,
    description text NOT NULL,
    start_time timestamp without time zone NOT NULL,
    end_time timestamp without time zone NOT NULL,
    speaker varchar(100) NOT NULL,
    PRIMARY KEY(agenda_id),
    CONSTRAINT agendas_event_id_fkey FOREIGN key(event_id) REFERENCES events(event_id) ON UPDATE CASCADE ON DELETE CASCADE
);



-- Generated by the database client.
CREATE TABLE announcements(
    announcement_id SERIAL NOT NULL,
    event_id integer,
    content text NOT NULL,
    timestamp timestamp without time zone NOT NULL,
    PRIMARY KEY(announcement_id),
    CONSTRAINT announcements_event_id_fkey FOREIGN key(event_id) REFERENCES events(event_id) ON UPDATE CASCADE ON DELETE CASCADE
);


-- Generated by the database client.
CREATE TABLE attendance(
    attendance_id SERIAL NOT NULL,
    registration_id integer,
    check_in_time timestamp without time zone NOT NULL,
    PRIMARY KEY(attendance_id),
    CONSTRAINT attendance_registration_id_fkey FOREIGN key(registration_id) REFERENCES registrations(registration_id) ON UPDATE CASCADE ON DELETE CASCADE
);


-- Generated by the database client.
CREATE TABLE feedback(
    feedback_id SERIAL NOT NULL,
    event_id integer,
    user_id integer,
    rating integer NOT NULL,
    comments text,
    PRIMARY KEY(feedback_id),
    CONSTRAINT feedback_event_id_fkey FOREIGN key(event_id) REFERENCES events(event_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT feedback_user_id_fkey FOREIGN key(user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);


-- Generated by the database client.
CREATE TABLE registrations(
    registration_id SERIAL NOT NULL,
    event_id integer,
    user_id integer,
    barcode varchar(50) NOT NULL,
    PRIMARY KEY(registration_id),
    CONSTRAINT registrations_event_id_fkey FOREIGN key(event_id) REFERENCES events(event_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT registrations_user_id_fkey FOREIGN key(user_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);


-- Generated by the database client.
CREATE TABLE subscriptions(
    ticket_id SERIAL NOT NULL,
    event_id SERIAL NOT NULL,
    subscription_fee numeric(10,2) NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    PRIMARY KEY(ticket_id),
    CONSTRAINT subscriptions_organizer_id_fkey FOREIGN key(event_id) REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE CASCADE
);

